name: Automatic Rebase
on:
  issue_comment:
    types: [created]
jobs:
  rebase:
    name: Rebase
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request != '' &&
      contains(github.event.comment.body, '/rebase')
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Automatic Rebase
        id: rebase
        uses: cirrus-actions/rebase@1.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post Success Message
        if: ${{ steps.rebase.outputs.status == 'success' }}
        run: |
          echo "Rebase successful!"
          echo "::set-output name=message::Rebase successful!"

      - name: Comment on Pull Request
        if: ${{ steps.rebase.outputs.status == 'success' }}
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = process.env['MESSAGE'];
            const context = github.context;
            const octokit = new github.GitHub(process.env['GITHUB_TOKEN']);
            octokit.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: message
            });

